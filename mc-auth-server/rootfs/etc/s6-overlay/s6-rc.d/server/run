#!/usr/bin/with-contenv bashio

set -euo pipefail

getConfig() {
  jq --raw-output "$1" /data/options.json
}

bashio::log.green "Starting app..."

cd /config/server

tmpfile="/tmp/server.log"
exitcodefile="/tmp/server_exit_code.txt"

rm -f "$tmpfile" "$exitcodefile"

RAM_ALLOCATE=$(getConfig '.allocatedRAM')
RAM_MAX=$(getConfig '.maxRAM')
bashio::log.green "Allocated RAM: $RAM_ALLOCATE MB"
bashio::log.green "Max RAM: $RAM_MAX MB"

echo "Starting 'server' process in tmux..."
tmux new-session -d -s server "java -Xms${RAM_ALLOCATE}M -Xmx${RAM_MAX}M \
    --add-modules=jdk.incubator.vector -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions \
    -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=28 -XX:G1MaxNewSizePercent=50 -XX:G1HeapRegionSize=16M -XX:G1ReservePercent=15 -XX:G1MixedGCCountTarget=3 \
    -XX:InitiatingHeapOccupancyPercent=20 -XX:G1MixedGCLiveThresholdPercent=90 -XX:SurvivorRatio=32 -XX:G1HeapWastePercent=5 -XX:MaxTenuringThreshold=1 -XX:+PerfDisableSharedMem \
    -XX:G1SATBBufferEnqueueingThresholdPercent=30 -XX:G1ConcMarkStepDurationMillis=5 -XX:G1RSetUpdatingPauseTimePercent=0 -XX:+UseNUMA -XX:-DontCompileHugeMethods \
    -XX:MaxNodeLimit=240000 -XX:NodeLimitFudgeFactor=8000 -XX:ReservedCodeCacheSize=400M -XX:NonNMethodCodeHeapSize=12M -XX:ProfiledCodeHeapSize=194M -XX:NonProfiledCodeHeapSize=194M \
    -XX:NmethodSweepActivity=1 -XX:+UseFastUnorderedTimeStamps -XX:+UseCriticalJavaThreadPriority -XX:AllocatePrefetchStyle=3 -XX:+AlwaysActAsServerClassMachine \
    -XX:+UseTransparentHugePages -XX:LargePageSizeInBytes=2M -XX:+UseLargePages -XX:+EagerJVMCI -XX:+UseStringDeduplication -XX:+UseAES -XX:+UseAESIntrinsics -XX:+UseFMA \
    -XX:+UseLoopPredicate -XX:+RangeCheckElimination -XX:+OptimizeStringConcat -XX:+UseCompressedOops -XX:+UseThreadPriorities -XX:+OmitStackTraceInFastThrow \
    -XX:+RewriteBytecodes -XX:+RewriteFrequentPairs -XX:+UseFPUForSpilling -XX:+UseFastStosb -XX:+UseNewLongLShift -XX:+UseVectorCmov -XX:+UseXMMForArrayCopy -XX:+UseXmmI2D -XX:+UseXmmI2F \
    -XX:+UseXmmLoadAndClearUpper -XX:+UseXmmRegToRegMoveAll -XX:+EliminateLocks -XX:+DoEscapeAnalysis -XX:+AlignVector -XX:+OptimizeFill -XX:+EnableVectorSupport \
    -XX:+UseCharacterCompareIntrinsics -XX:+UseCopySignIntrinsic -XX:+UseVectorStubs -XX:UseAVX=2 -XX:UseSSE=4 -XX:+UseFastJNIAccessors -XX:+UseInlineCaches -XX:+SegmentedCodeCache \
    -jar server.jar > ${tmpfile} 2>&1; echo \$? > ${exitcodefile}"

tail -n 0 -F "$tmpfile" | while read -r line; do
    if [[ "$line" != *"ERROR]: SLF4J:"* ]]; then
        echo "$line"
    fi
done &
tail_pid=$!

while tmux has-session -t server 2>/dev/null; do
   sleep 1
done

kill $tail_pid 2>/dev/null

# If available, use the exit code from the java command.
if [ -f "$exitcodefile" ]; then
   exitcode=$(cat "$exitcodefile")
   bashio::log.green "Server process exited with code: $exitcode"
   exit $exitcode
else
   bashio::warn "No exit code available. Exiting with error."
   exit 1
fi
